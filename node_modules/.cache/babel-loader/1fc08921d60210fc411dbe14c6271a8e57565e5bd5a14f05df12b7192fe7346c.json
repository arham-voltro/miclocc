{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport axios from 'axios';\nconst state = {\n  todos: []\n};\nconst getters = {\n  allTodos: state => {\n    return state.todos;\n  }\n};\nconst actions = {\n  async fetchTodos({\n    commit\n  }) {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n    commit('setTodos', response.data);\n  },\n  async deleteTodo({\n    commit\n  }, id) {\n    await axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`);\n    commit('removeTodo', id);\n  },\n  async updateTodo({\n    commit\n  }, updatedTodo) {\n    const response = await axios.put(`https://jsonplaceholder.typicode.com/todos/${updatedTodo.id}`, updatedTodo);\n    commit('updateTodo', response.data);\n  },\n  async addTodo({\n    commit\n  }, title) {\n    const response = await axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title: title,\n      completed: false\n    });\n    commit('addTodo', response.data);\n  },\n  async filterTodos({\n    commit\n  }, event) {\n    const limit = parseInt(event.target.options[event.target.options.selectedIndex].innerText);\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/todos?_limit=${limit}`);\n    commit('setTodos', response.data);\n  }\n};\nconst mutations = {\n  setTodos: (state, todos) => state.todos = todos,\n  removeTodo: (state, id) => state.todos = state.todos.filter(todo => todo.id !== id),\n  updateTodo: (state, updatedTodo) => {\n    const index = state.todos.findIndex(todo => todo.id === updatedTodo.id);\n    if (index !== -1) {\n      state.todos.splice(index, 1, updatedTodo);\n    }\n  },\n  addTodo: (state, newTodo) => state.todos.unshift(newTodo)\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","state","todos","getters","allTodos","actions","fetchTodos","commit","response","get","data","deleteTodo","id","delete","updateTodo","updatedTodo","put","addTodo","title","post","completed","filterTodos","event","limit","parseInt","target","options","selectedIndex","innerText","mutations","setTodos","removeTodo","filter","todo","index","findIndex","splice","newTodo","unshift"],"sources":["/Users/arhamshahid/Desktop/miceloc/src/store/modules/todos.js"],"sourcesContent":["import axios from 'axios';\n\nconst state = {\n    todos: []\n};\nconst getters = {\n    allTodos: (state) => {\n        return state.todos\n    }\n};\nconst actions = {\n    async fetchTodos({ commit }) {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n        commit('setTodos', response.data);\n    },\n    async deleteTodo({ commit }, id) {\n        await axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`);\n        commit('removeTodo', id);\n    },\n    async updateTodo({commit }, updatedTodo) {\n   const response = await axios.put(`https://jsonplaceholder.typicode.com/todos/${updatedTodo.id}`, updatedTodo);\n   commit('updateTodo', response.data);\n    },\n    async addTodo( {commit}, title ){\n        const response = await axios.post('https://jsonplaceholder.typicode.com/todos',{title:title, completed:false});\n        commit('addTodo', response.data)\n   },\n   async filterTodos ({commit}, event) {\n    const limit = parseInt(event.target.options[event.target.options.selectedIndex].innerText);\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/todos?_limit=${limit}`);\n    commit('setTodos', response.data);\n   }\n};\nconst mutations = {\n    setTodos: (state, todos) => (state.todos = todos),\n    removeTodo:(state,id) => state.todos = state.todos.filter((todo) => todo.id !== id),\n    updateTodo:(state, updatedTodo) => {\n        const index = state.todos.findIndex( (todo)=> todo.id === updatedTodo.id);\n        if(index !== -1) {\n            state.todos.splice(index, 1, updatedTodo);\n        }\n    },\n    addTodo:(state, newTodo) => state.todos.unshift(newTodo)\n   \n};\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAG;EACVC,KAAK,EAAE;AACX,CAAC;AACD,MAAMC,OAAO,GAAG;EACZC,QAAQ,EAAGH,KAAK,IAAK;IACjB,OAAOA,KAAK,CAACC,KAAK;EACtB;AACJ,CAAC;AACD,MAAMG,OAAO,GAAG;EACZ,MAAMC,UAAU,CAAC;IAAEC;EAAO,CAAC,EAAE;IACzB,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,4CAA4C,CAAC;IAC9EF,MAAM,CAAC,UAAU,EAAEC,QAAQ,CAACE,IAAI,CAAC;EACrC,CAAC;EACD,MAAMC,UAAU,CAAC;IAAEJ;EAAO,CAAC,EAAEK,EAAE,EAAE;IAC7B,MAAMZ,KAAK,CAACa,MAAM,CAAE,8CAA6CD,EAAG,EAAC,CAAC;IACtEL,MAAM,CAAC,YAAY,EAAEK,EAAE,CAAC;EAC5B,CAAC;EACD,MAAME,UAAU,CAAC;IAACP;EAAO,CAAC,EAAEQ,WAAW,EAAE;IAC1C,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACgB,GAAG,CAAE,8CAA6CD,WAAW,CAACH,EAAG,EAAC,EAAEG,WAAW,CAAC;IAC7GR,MAAM,CAAC,YAAY,EAAEC,QAAQ,CAACE,IAAI,CAAC;EAClC,CAAC;EACD,MAAMO,OAAO,CAAE;IAACV;EAAM,CAAC,EAAEW,KAAK,EAAE;IAC5B,MAAMV,QAAQ,GAAG,MAAMR,KAAK,CAACmB,IAAI,CAAC,4CAA4C,EAAC;MAACD,KAAK,EAACA,KAAK;MAAEE,SAAS,EAAC;IAAK,CAAC,CAAC;IAC9Gb,MAAM,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAAC;EACrC,CAAC;EACD,MAAMW,WAAW,CAAE;IAACd;EAAM,CAAC,EAAEe,KAAK,EAAE;IACnC,MAAMC,KAAK,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACC,OAAO,CAACJ,KAAK,CAACG,MAAM,CAACC,OAAO,CAACC,aAAa,CAAC,CAACC,SAAS,CAAC;IAC1F,MAAMpB,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,qDAAoDc,KAAM,EAAC,CAAC;IAC9FhB,MAAM,CAAC,UAAU,EAAEC,QAAQ,CAACE,IAAI,CAAC;EAClC;AACH,CAAC;AACD,MAAMmB,SAAS,GAAG;EACdC,QAAQ,EAAE,CAAC7B,KAAK,EAAEC,KAAK,KAAMD,KAAK,CAACC,KAAK,GAAGA,KAAM;EACjD6B,UAAU,EAAC,CAAC9B,KAAK,EAACW,EAAE,KAAKX,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAAC8B,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKA,EAAE,CAAC;EACnFE,UAAU,EAAC,CAACb,KAAK,EAAEc,WAAW,KAAK;IAC/B,MAAMmB,KAAK,GAAGjC,KAAK,CAACC,KAAK,CAACiC,SAAS,CAAGF,IAAI,IAAIA,IAAI,CAACrB,EAAE,KAAKG,WAAW,CAACH,EAAE,CAAC;IACzE,IAAGsB,KAAK,KAAK,CAAC,CAAC,EAAE;MACbjC,KAAK,CAACC,KAAK,CAACkC,MAAM,CAACF,KAAK,EAAE,CAAC,EAAEnB,WAAW,CAAC;IAC7C;EACJ,CAAC;EACDE,OAAO,EAAC,CAAChB,KAAK,EAAEoC,OAAO,KAAKpC,KAAK,CAACC,KAAK,CAACoC,OAAO,CAACD,OAAO;AAE3D,CAAC;AACD,eAAe;EACXpC,KAAK;EACLE,OAAO;EACPE,OAAO;EACPwB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}